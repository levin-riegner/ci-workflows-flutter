name: Internal Workflow - Uploads QA build

on:
  push:
    branches:
      - 'internal**'

jobs:
  # Config Job
  config:
    name: Load dotenv Config
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      # dotenv variables
      FLUTTER_VERSION: ${{ steps.dotenv.outputs.FLUTTER_VERSION }}
      ANDROID_SUPPORTED: ${{ steps.dotenv.outputs.ANDROID_SUPPORTED }}
      IOS_SUPPORTED: ${{ steps.dotenv.outputs.IOS_SUPPORTED }}
      RUBY_VERSION: ${{ steps.dotenv.outputs.RUBY_VERSION }}
      JAVA_VERSION: ${{ steps.dotenv.outputs.JAVA_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Load dotenv config
      - name: Load dotenv config
        uses: falti/dotenv-action@v0.2.4
        id: dotenv
        with:
          path: ./.github/workflows/.env
          log-variables: true
  # Android Job
  internal_android:
    name: Android Internal Workflow
    needs: config
    if: needs.config.outputs.ANDROID_SUPPORTED == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # SSH Key for private repository dependencies
      - name: Install GitHub SSH Key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.GIT_SSH_KEY }}
      # Install SDKs
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ needs.config.outputs.JAVA_VERSION }}
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ needs.config.outputs.FLUTTER_VERSION }}
          channel: 'stable'
      # Flutter project build
      - name: Get Flutter dependencies
        run: |
          flutter pub upgrade
          flutter pub get
      - name: Execute build_runner Code Generation
        run: flutter pub run build_runner build --delete-conflicting-outputs
      # Fastlane Setup
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ needs.config.outputs.RUBY_VERSION }}
      - name: Setup Fastlane
        run: cd android && gem install bundler && bundle install && cd ..
      # Decrypt Keystore
      - name: Decrypt Keystore
        id: keystore_file
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'keystore.jks'
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      # Upload QA build
      - name: Upload QA Build
        run: |
          flutter build apk -t lib/main_qa.dart --flavor qa --release
          cd android
          bundle exec fastlane internal_release --env qa is_flutter:true
        env:
          KEYSTORE_FILE: ${{ steps.keystore_file.outputs.filePath }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  # iOS Job
  internal_ios:
    name: iOS Internal Workflow
    needs: config
    if: needs.config.outputs.IOS_SUPPORTED == 'true'
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # SSH Key for private repository dependencies
      - name: Install GitHub SSH Key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.GIT_SSH_KEY }}
      # Install SDKs
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ needs.config.outputs.FLUTTER_VERSION }}
          channel: 'stable'
      # Flutter Project build
      - name: Get Flutter dependencies
        run: |
          flutter pub upgrade
          flutter pub get
      - name: Execute build_runner Code Generation
        run: flutter pub run build_runner build --delete-conflicting-outputs
      # Fastlane Setup
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ needs.config.outputs.RUBY_VERSION }}
      - name: Setup Fastlane
        run: cd ios && gem install bundler && bundle install && cd ..
      # Upload to Appstore Connect
      - name: Upload QA build
        run: |
          flutter build ios -t lib/main_qa.dart --flavor QA --release --no-codesign
          cd ios
          bundle exec fastlane testflight_release is_ci:true --env qa
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
